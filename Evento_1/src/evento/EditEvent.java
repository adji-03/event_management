
package evento;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author daboy
 */
public class EditEvent extends javax.swing.JDialog {

    public EditEvent(EventManager eventManager, boolean par) {
         initComponents();  // Initialisation de l'interface graphique
    this.setLocationRelativeTo(null);  // Centrer la fenêtre sur l'écran
    }

    private boolean validateEditEventForm() {
        if (eventIdText.getText().isEmpty() || eventNameText.getText().isEmpty() || 
            eventPlaceText.getText().isEmpty() || eventDateText.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Please fill all event details to edit it.");
            return false;
        }
        return true;
    }

    private boolean idExists(int id) {
        DatabaseConnection db = new DatabaseConnection();
        
        String selectData = "SELECT ID FROM events WHERE ID = ?";
        try (Connection connection = db.connect();
             PreparedStatement preparedStatement = connection.prepareStatement(selectData)) {
            preparedStatement.setInt(1, id);
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                return resultSet.next();
            }
        } catch (SQLException e) {
            Logger.getLogger(EditEvent.class.getName()).log(Level.SEVERE, "Unexpected Error", e);
        }
        return false;
    }

    private void clear() {
        eventIdText.setText("");
        eventNameText.setText("");
        eventPlaceText.setText("");
        eventDateText.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coloredPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        editEventLabel = new javax.swing.JLabel();
        eventNameText = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        DescriptionLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        eventPlaceText = new javax.swing.JTextField();
        eventDateText = new com.toedter.calendar.JDateChooser();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        eventTimeText = new javax.swing.JSpinner(sm);
        Edit = new javax.swing.JButton();
        eventIdText = new javax.swing.JTextField();
        titleLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        coloredPanel.setBackground(new java.awt.Color(205, 205, 235));

        titlePanel.setBackground(new java.awt.Color(0, 0, 102));

        editEventLabel.setBackground(new java.awt.Color(0, 51, 204));
        editEventLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editEventLabel.setForeground(new java.awt.Color(255, 255, 255));
        editEventLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editEventLabel.setText("EDIT EVENT");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editEventLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editEventLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        eventNameText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nameLabel.setText("Event ID");

        DescriptionLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DescriptionLabel.setText("New Description");

        dateLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dateLabel.setText("New Date");

        timeLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        timeLabel.setText("New Time");

        eventPlaceText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        eventPlaceText.setPreferredSize(new java.awt.Dimension(6, 29));

        eventDateText.setDateFormatString("dd-MM-yyyy");
        eventDateText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        eventDateText.setMinSelectableDate(new Date());

        JSpinner.DateEditor de = new JSpinner.DateEditor(eventTimeText, "HH:mm");
        eventTimeText.setEditor(de);
        eventTimeText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        eventTimeText.setPreferredSize(new java.awt.Dimension(33, 30));

        Edit.setBackground(new java.awt.Color(0, 51, 204));
        Edit.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setText("Edit");
        Edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditMouseClicked(evt);
            }
        });
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        eventIdText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        titleLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleLabel1.setText("New Title");

        javax.swing.GroupLayout coloredPanelLayout = new javax.swing.GroupLayout(coloredPanel);
        coloredPanel.setLayout(coloredPanelLayout);
        coloredPanelLayout.setHorizontalGroup(
            coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coloredPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coloredPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DescriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(coloredPanelLayout.createSequentialGroup()
                        .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(eventNameText)
                        .addComponent(eventPlaceText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eventDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eventIdText)))
                .addGap(34, 34, 34))
        );
        coloredPanelLayout.setVerticalGroup(
            coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coloredPanelLayout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(coloredPanelLayout.createSequentialGroup()
                        .addComponent(eventNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eventPlaceText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coloredPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventDateText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(coloredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coloredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(coloredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        
     


    private void EditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditMouseClicked
        if (!validateEditEventForm()) return;

    try {
        int id = Integer.parseInt(eventIdText.getText());
        if (!idExists(id)) {
            JOptionPane.showMessageDialog(this, "Event not found. Please verify your ID!");
            return;
        }

        // Format the date to 'yyyy-MM-dd'
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String stringFormattedDate = sdf1.format(eventDateText.getDate());

        // Format the time to 'HH:mm'
        SimpleDateFormat sdf2 = new SimpleDateFormat("HH:mm");
        String readableTime = sdf2.format((Date) eventTimeText.getValue());

        // Ensure both date and time are valid
        if (stringFormattedDate == null || readableTime == null) {
            JOptionPane.showMessageDialog(this, "Invalid date or time. Please check the fields.");
            return;
        }

        // Create the event object
        DatabaseConnection db = new DatabaseConnection();
        Event e = new Event(eventNameText.getText(), eventPlaceText.getText(), stringFormattedDate, readableTime);

        // Update event using the correct id
        db.updateEvent(id, e.getTitle(), e.getDescription(), e.getDate(), e.getTime());

        // Success message
        JOptionPane.showMessageDialog(this, "Event edited successfully!\nDon't forget to refresh events.");
        
        // Clear form after edit
        clear();

        // Ask the user if they want to edit another event
        int yesNo = JOptionPane.showOptionDialog(this, "Do you want to edit another event?",
                "Edit another event", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (yesNo != JOptionPane.YES_OPTION) {
            dispose();  // Close the edit window
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid event ID. Please enter a valid number.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
    }
    }//GEN-LAST:event_EditMouseClicked

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        
    }//GEN-LAST:event_EditActionPerformed

    
    
  
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            EventManager eventManager = null;
            try {
                eventManager = new EventManager();
            } catch (SQLException ex) {
                Logger.getLogger(EditEvent.class.getName()).log(Level.SEVERE, null, ex);
            }
            new EditEvent(eventManager, true).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JButton Edit;
    private javax.swing.JPanel coloredPanel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel editEventLabel;
    private com.toedter.calendar.JDateChooser eventDateText;
    private javax.swing.JTextField eventIdText;
    private javax.swing.JTextField eventNameText;
    private javax.swing.JTextField eventPlaceText;
    private javax.swing.JSpinner eventTimeText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
